{"ast":null,"code":"import _slicedToArray from\"/Users/ziansari/Code/drs-frontend-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useContext,useEffect,useState}from'react';import{AppContext}from'../App';import{CBCMJobStatus}from'../stubs/CBCMJobStatus';import{Link}from'react-router-dom';import{useQuery}from'@apollo/client';import{LOAD_JOBSUMMARY}from'../GraphQL/Queries';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function JobSummary(){var _useContext=useContext(AppContext),systemName=_useContext.systemName;var _CBCMJobStatus$map=CBCMJobStatus.map(function(element){return element.data.jobsPerStatus;}),_CBCMJobStatus$map2=_slicedToArray(_CBCMJobStatus$map,2),mydata=_CBCMJobStatus$map2[0],setMydata=_CBCMJobStatus$map2[1];var _useState=useState(1),_useState2=_slicedToArray(_useState,2),status=_useState2[0],setStatus=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),jobSummaryResponse=_useState4[0],setJobSummaryResponse=_useState4[1];var _useQuery=useQuery(LOAD_JOBSUMMARY,{variables:{systemName:systemName,status:status}}),error=_useQuery.error,loading=_useQuery.loading,data=_useQuery.data;useEffect(function(){if(data){setJobSummaryResponse(data.jobSummaryBySystem);}},[data]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"JobSummary for - \",systemName]}),/*#__PURE__*/_jsx(\"div\",{className:\"page-contain\",children:jobSummaryResponse.map(function(item){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Link,{to:\"/jobdetails\",className:\"data-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:item.jobName}),/*#__PURE__*/_jsx(\"h4\",{}),/*#__PURE__*/_jsxs(\"span\",{children:[\"srcSystem: \",item.srcSystem,\" \"]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"targetSystem: \",item.targetSystem,\" \"]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Status: \",item.jobStatus,\" \"]}),/*#__PURE__*/_jsx(\"span\",{class:\"link-text\",children:\"View Details\"})]})});})})]});}export default JobSummary;","map":{"version":3,"names":["useContext","useEffect","useState","AppContext","CBCMJobStatus","Link","useQuery","LOAD_JOBSUMMARY","JobSummary","systemName","map","element","data","jobsPerStatus","mydata","setMydata","status","setStatus","jobSummaryResponse","setJobSummaryResponse","variables","error","loading","jobSummaryBySystem","item","jobName","srcSystem","targetSystem","jobStatus"],"sources":["/Users/ziansari/Code/drs-frontend-app/src/pages/JobSummary.js"],"sourcesContent":["import { useContext, useEffect, useState } from 'react'\nimport { AppContext } from '../App';\nimport { CBCMJobStatus } from '../stubs/CBCMJobStatus'\nimport { Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { LOAD_JOBSUMMARY } from '../GraphQL/Queries';\n\n\n\nfunction JobSummary() {\n    const { systemName } = useContext(AppContext);\n    const [mydata, setMydata] = CBCMJobStatus.map((element) => element.data.jobsPerStatus);\n    const [status,setStatus] = useState(1);\n\n\n    const [jobSummaryResponse, setJobSummaryResponse] = useState([]);\n\n    const { error, loading, data } = useQuery(LOAD_JOBSUMMARY, { variables: { systemName , status } });\n\n    useEffect(() => {\n        if (data) {\n\n            setJobSummaryResponse(data.jobSummaryBySystem);\n\n        }\n\n    }, [data])\n\n\n    return (\n\n        <div >\n            <h1>JobSummary for - {systemName}</h1>\n            <div className=\"page-contain\">\n                {jobSummaryResponse.map((item) =>\n                    <div >\n                        <Link to='/jobdetails' className='data-card'>\n                            <h3>{item.jobName}</h3>\n                            <h4></h4>\n                            <span>srcSystem: {item.srcSystem} </span>\n                            <span>targetSystem: {item.targetSystem} </span>\n                            <span>Status: {item.jobStatus} </span>\n\n                            <span class=\"link-text\">View Details</span>\n                        </Link>\n                    </div>\n                )}\n            </div>\n        </div>\n\n\n    )\n}\n\nexport default JobSummary;"],"mappings":"2HAAA,OAASA,UAAU,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CACvD,OAASC,UAAU,KAAQ,QAAQ,CACnC,OAASC,aAAa,KAAQ,wBAAwB,CACtD,OAASC,IAAI,KAAQ,kBAAkB,CACvC,OAASC,QAAQ,KAAQ,gBAAgB,CACzC,OAASC,eAAe,KAAQ,oBAAoB,CAAC,wFAIrD,QAASC,WAAU,EAAG,CAClB,gBAAuBR,UAAU,CAACG,UAAU,CAAC,CAArCM,UAAU,aAAVA,UAAU,CAClB,uBAA4BL,aAAa,CAACM,GAAG,CAAC,SAACC,OAAO,QAAKA,QAAO,CAACC,IAAI,CAACC,aAAa,GAAC,0DAA/EC,MAAM,wBAAEC,SAAS,wBACxB,cAA2Bb,QAAQ,CAAC,CAAC,CAAC,wCAA/Bc,MAAM,eAACC,SAAS,eAGvB,eAAoDf,QAAQ,CAAC,EAAE,CAAC,yCAAzDgB,kBAAkB,eAAEC,qBAAqB,eAEhD,cAAiCb,QAAQ,CAACC,eAAe,CAAE,CAAEa,SAAS,CAAE,CAAEX,UAAU,CAAVA,UAAU,CAAGO,MAAM,CAANA,MAAO,CAAE,CAAC,CAAC,CAA1FK,KAAK,WAALA,KAAK,CAAEC,OAAO,WAAPA,OAAO,CAAEV,IAAI,WAAJA,IAAI,CAE5BX,SAAS,CAAC,UAAM,CACZ,GAAIW,IAAI,CAAE,CAENO,qBAAqB,CAACP,IAAI,CAACW,kBAAkB,CAAC,CAElD,CAEJ,CAAC,CAAE,CAACX,IAAI,CAAC,CAAC,CAGV,mBAEI,oCACI,0CAAsBH,UAAU,GAAM,cACtC,YAAK,SAAS,CAAC,cAAc,UACxBS,kBAAkB,CAACR,GAAG,CAAC,SAACc,IAAI,qBACzB,kCACI,MAAC,IAAI,EAAC,EAAE,CAAC,aAAa,CAAC,SAAS,CAAC,WAAW,wBACxC,oBAAKA,IAAI,CAACC,OAAO,EAAM,cACvB,aAAS,cACT,sCAAkBD,IAAI,CAACE,SAAS,OAAS,cACzC,yCAAqBF,IAAI,CAACG,YAAY,OAAS,cAC/C,mCAAeH,IAAI,CAACI,SAAS,OAAS,cAEtC,aAAM,KAAK,CAAC,WAAW,0BAAoB,GACxC,EACL,GACT,EACC,GACJ,CAId,CAEA,cAAepB,WAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}