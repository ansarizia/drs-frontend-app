{"ast":null,"code":"var _jsxFileName = \"/Users/ziansari/Code/drs-frontend-app/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './images/eand-icon.svg';\nimport './css/DataCard.css';\nimport { useState, createContext } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport SystemSummary from './pages/SystemSummary';\nimport JobSummary from './pages/JobSummary';\nimport Navbar from './pages/Navbar';\nimport JobDetails from './pages/JobDetails';\nimport ContactPage from './pages/ContactPage';\nimport { ApolloClient, InMemoryCache, ApolloProvider, HttpLink, from } from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst errorLink = onError(_ref => {\n  let {\n    graphqlErrors,\n    networkError\n  } = _ref;\n  if (graphqlErrors) {\n    graphqlErrors.map(_ref2 => {\n      let {\n        message,\n        location,\n        path\n      } = _ref2;\n      alert(`Graphql error ${message}`);\n    });\n  }\n});\nconst link = from([errorLink, new HttpLink({\n  uri: \"http://au3378:8000/app/api\"\n})]);\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: link\n});\nexport const AppContext = /*#__PURE__*/createContext();\nfunction App() {\n  _s();\n  const [systemName, setSystemName] = useState(\"\");\n  const [selectedSystem, setSelectedSystem] = useState(\"\");\n  const [selectedJob, setSelectedJob] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n        value: {\n          systemName,\n          setSystemName,\n          selectedSystem,\n          setSelectedSystem,\n          selectedJob,\n          setSelectedJob\n        },\n        children: /*#__PURE__*/_jsxDEV(Router, {\n          children: [/*#__PURE__*/_jsxDEV(Navbar, {\n            className: \"App-header\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(SystemSummary, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/jobsummary\",\n              element: /*#__PURE__*/_jsxDEV(JobSummary, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 50\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/jobdetails\",\n              element: /*#__PURE__*/_jsxDEV(JobDetails, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 50\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/contactus\",\n              element: /*#__PURE__*/_jsxDEV(ContactPage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"*\",\n              element: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \" Page Not Found \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 39\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1utTsKMlexFpwJ8FGi0Bl0Mub2A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useState","createContext","BrowserRouter","Router","Routes","Route","Link","SystemSummary","JobSummary","Navbar","JobDetails","ContactPage","ApolloClient","InMemoryCache","ApolloProvider","HttpLink","from","onError","errorLink","graphqlErrors","networkError","map","message","location","path","alert","link","uri","client","cache","AppContext","App","systemName","setSystemName","selectedSystem","setSelectedSystem","selectedJob","setSelectedJob"],"sources":["/Users/ziansari/Code/drs-frontend-app/src/App.js"],"sourcesContent":["import logo from './images/eand-icon.svg';\nimport './css/DataCard.css';\nimport { useState,createContext } from \"react\";\nimport { BrowserRouter as Router, Routes, Route , Link } from 'react-router-dom';\nimport SystemSummary from './pages/SystemSummary';\nimport JobSummary from './pages/JobSummary';\nimport Navbar from './pages/Navbar';\nimport JobDetails from './pages/JobDetails';\nimport ContactPage from './pages/ContactPage';\n\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  HttpLink,\n  from,\n} from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\";\n\nconst errorLink = onError(({ graphqlErrors, networkError }) => {\n  if (graphqlErrors) {\n    graphqlErrors.map(({ message, location, path }) => {\n      alert(`Graphql error ${message}`);\n    });\n  }\n});\n\nconst link = from([\n  errorLink,\n  new HttpLink({ uri: \"http://au3378:8000/app/api\" }),\n]);\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: link,\n});\n\nexport const AppContext = createContext();\n\nfunction App() {\n  \n\n  const [systemName, setSystemName] = useState(\"\");\n  const [selectedSystem, setSelectedSystem] = useState(\"\");\n  const [selectedJob, setSelectedJob] = useState(\"\");\n\n  return (\n    <ApolloProvider client={client}>\n      <div >\n\n        <AppContext.Provider value={{ systemName, setSystemName ,selectedSystem , setSelectedSystem,selectedJob, setSelectedJob}}>\n          <Router>\n            <Navbar className=\"App-header\" />\n            <Routes>\n              <Route path='/' element={<SystemSummary />} />\n              <Route path='/jobsummary' element={<JobSummary />} />\n              <Route path='/jobdetails' element={<JobDetails />} />\n              <Route path='/contactus' element={<ContactPage />} />\n              <Route path='*' element=<h3> Page Not Found </h3> />\n            </Routes>\n          </Router>\n        </AppContext.Provider>\n\n      </div>\n    </ApolloProvider>\n\n\n  );\n}\n\n\n\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}