[{"/Users/ziansari/Code/drs-frontend-app/src/index.js":"1","/Users/ziansari/Code/drs-frontend-app/src/App.js":"2","/Users/ziansari/Code/drs-frontend-app/src/reportWebVitals.js":"3","/Users/ziansari/Code/drs-frontend-app/src/pages/SystemSummary.js":"4","/Users/ziansari/Code/drs-frontend-app/src/pages/JobSummary.js":"5","/Users/ziansari/Code/drs-frontend-app/src/pages/Navbar.js":"6","/Users/ziansari/Code/drs-frontend-app/src/pages/JobDetails.js":"7","/Users/ziansari/Code/drs-frontend-app/src/components/PieChart.js":"8","/Users/ziansari/Code/drs-frontend-app/src/components/DoughnutChart.js":"9","/Users/ziansari/Code/drs-frontend-app/src/components/LineChart.js":"10","/Users/ziansari/Code/drs-frontend-app/src/components/BarChart.js":"11","/Users/ziansari/Code/drs-frontend-app/src/GraphQL/Queries.js":"12","/Users/ziansari/Code/drs-frontend-app/src/pages/ContactPage.js":"13","/Users/ziansari/Code/drs-frontend-app/src/stubs/DRS_job_status.js":"14","/Users/ziansari/Code/drs-frontend-app/src/stubs/CBCMJobStatus.js":"15","/Users/ziansari/Code/drs-frontend-app/src/stubs/JobDetailsData.js":"16"},{"size":535,"mtime":1670481894000,"results":"17","hashOfConfig":"18"},{"size":2022,"mtime":1671028636000,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1670481894000,"results":"20","hashOfConfig":"18"},{"size":2129,"mtime":1671028634000,"results":"21","hashOfConfig":"18"},{"size":2633,"mtime":1671028632000,"results":"22","hashOfConfig":"18"},{"size":1069,"mtime":1670569842000,"results":"23","hashOfConfig":"18"},{"size":2827,"mtime":1671028630000,"results":"24","hashOfConfig":"18"},{"size":211,"mtime":1670481894000,"results":"25","hashOfConfig":"18"},{"size":231,"mtime":1670481894000,"results":"26","hashOfConfig":"18"},{"size":215,"mtime":1670481894000,"results":"27","hashOfConfig":"18"},{"size":211,"mtime":1670481894000,"results":"28","hashOfConfig":"18"},{"size":1063,"mtime":1671028627000,"results":"29","hashOfConfig":"18"},{"size":130,"mtime":1670506575000,"results":"30","hashOfConfig":"18"},{"size":371,"mtime":1670481894000,"results":"31","hashOfConfig":"18"},{"size":638,"mtime":1670481894000,"results":"32","hashOfConfig":"18"},{"size":878,"mtime":1670481894000,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10j3pl2",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ziansari/Code/drs-frontend-app/src/index.js",[],[],"/Users/ziansari/Code/drs-frontend-app/src/App.js",["91","92","93"],[],"/Users/ziansari/Code/drs-frontend-app/src/reportWebVitals.js",[],[],"/Users/ziansari/Code/drs-frontend-app/src/pages/SystemSummary.js",["94","95","96","97","98","99","100","101","102","103","104","105"],[],"import { useState, useContext, useEffect } from \"react\";\nimport '../css/DataCard.css';\nimport BarChart from '../components/BarChart';\nimport LineChart from '../components/LineChart';\nimport PieChart from '../components/PieChart';\nimport DoughnutChart from '../components/DoughnutChart';\nimport { JobData } from '../stubs/DRS_job_status';\nimport { Link } from 'react-router-dom';\nimport { AppContext } from '../App';\nimport { useQuery, gql } from '@apollo/client';\nimport { LOAD_SYSTEMSUMMARY } from '../GraphQL/Queries';\n\nfunction SystemSummary() {\n\n\n  /* const [mydata, setMydata] = JobData.map((element) => element.data.jobsBySystem) */\n  const { setSystemName, setSelectedSystem } = useContext(AppContext);\n\n\n\n  const [newSystemName, setNewSystemName] = useState(\"\");\n\n  const [systemSummaryResponse, setSystemSummaryResponse] = useState([]);\n\n  const { error, loading, data } = useQuery(LOAD_SYSTEMSUMMARY);\n  useEffect(() => {\n    if (data) {\n      setSystemSummaryResponse(data.systemSummary);\n    }\n    else {\n      setSystemSummaryResponse(JobData.map((element) => element.data.jobsBySystem));\n    }\n\n  }, [data])\n\n  function PopulateChart(props) {\n    const [jobStatusData, setJobStatusData] = useState(\n\n      {\n        labels: ['Completed', 'Pending'],\n        datasets: [{\n          label: props.label,\n          data: [props.data.completedJobs, props.data.pendingJobs],\n          backgroundColor: [\n            '#47B39C',\n            '#FFC154'\n\n          ]\n        }]\n      }\n    )\n\n    return (\n      <div ><PieChart chartData={jobStatusData} />  </div>\n    )\n  }\n\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n  return (\n    <div>\n      <h2>SystemSummary </h2>\n      <div className=\"page-contain\">\n\n        {systemSummaryResponse.map((item) =>\n          <Link to='/jobsummary' className='data-card' onClick={() => setSystemName(item.systemName)} >\n            < PopulateChart data={item} label={item.systemName} />\n            <span className=\"link-text\"    > {item.systemName} </span>\n          </Link>\n        )}\n      </div>\n    </div>\n  );\n\n}\n\nexport default SystemSummary;","/Users/ziansari/Code/drs-frontend-app/src/pages/JobSummary.js",["106","107","108","109","110","111","112"],[],"import { useContext, useEffect, useState } from 'react'\nimport { AppContext } from '../App';\nimport { CBCMJobStatus } from '../stubs/CBCMJobStatus'\nimport { Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { LOAD_JOBSUMMARY } from '../GraphQL/Queries';\n\n\n\nfunction JobSummary() {\n    const { systemName, setSelectedJob, setInquiryQ } = useContext(AppContext);\n    const [mydata, setMydata] = CBCMJobStatus.map((element) => element.data.jobsPerStatus);\n    const [status, setStatus] = useState(1);\n    const JobsummaryError = [{ \"jobName\": \"No Data Found\", \"jobStatus\": 0, \"srcSystem\": \"NA\", \"targetSystem\": \"NA\", \"__typename\": \"JobSummaryBySystemType\" }];\n\n\n    const [jobSummaryResponse, setJobSummaryResponse] = useState([]);\n\n    const { error, loading, data } = useQuery(LOAD_JOBSUMMARY, { variables: { systemName, status } });\n\n    useEffect(() => {\n        if (data) {\n            if (data.jobSummaryBySystem.length > 0) {\n                setJobSummaryResponse(data.jobSummaryBySystem);\n\n            }\n            else {\n                setJobSummaryResponse(JobsummaryError);\n            }\n\n        }\n\n\n\n    }, [data])\n\n    if (loading) return 'Loading...';\n    if (error) return `Error! ${error.message}`;\n    return (\n\n\n        <div>\n            <h2>JobSummary for - {systemName}</h2>\n            <div className=\"page-contain\">\n\n                {jobSummaryResponse.map((item) =>\n\n                    <div >\n                        <Link to='/jobdetails' className='data-card' onClick={() => { setInquiryQ(item.inquiryQ); setSelectedJob(item.jobName) }}>\n\n                            <h4>{item.jobName ? item.jobName : \"NA\"}</h4>\n                            <h3></h3>\n                            <span>Source : <h4>{item.srcSystem ? item.srcSystem : \"NA\"} </h4> </span>\n                            <span> Target : <h4>{item.targetSystem ? item.targetSystem.name : \"NA\"} </h4> </span>\n                            <span>Status: <h4>{item.jobStatus == 1 ? \"Completed\" : \"Failed\"} </h4> </span>\n                            <span>Pending records: <h4>{item.pendingRecords == 1 ? \"Yes\" : \"NA\"} </h4> </span>\n                            <span> Reason : <h4>{item.failureReason ? item.failureReason : \"NA\"} </h4> </span>\n                            <span> Date : <h4>{item.runDate ? item.runDate : \"NA\"} </h4> </span>\n                            <span class=\"link-text\">View Details</span>\n                        </Link>\n                        {console.log(item.pendingRecords)}\n\n                    </div>\n                )}\n            </div>\n        </div>\n\n\n\n    )\n}\n\nexport default JobSummary;","/Users/ziansari/Code/drs-frontend-app/src/pages/Navbar.js",["113","114","115"],[],"import {useContext} from 'react';\nimport { Link } from 'react-router-dom';\nimport '../css/navbar.css'\nimport logo from '../images/eand-icon.svg';\nimport etlogo from '../images/etnewlogo.svg';\n\n\n\n function Navbar ()  {\n   \n    return (\n        <div>\n           \n            <nav class=\"navbar\">\n     \n     \n     <div class=\"et_logo\"> <img src={etlogo}></img> DRS</div>\n     \n     <ul class=\"nav-links\">\n       \n       \n       <label for=\"checkbox_toggle\" class=\"hamburger\">&#9776;</label>\n       \n       <div class=\"menu\">\n         <li><Link to=\"/\">Home</Link></li>\n         <li class=\"services\">\n           <Link href=\"/\">Services</Link>\n           \n           <ul class=\"dropdown\">\n             <li><Link to=\"/\">Service 1</Link></li>\n             <li><Link to=\"/\">Service 2 </Link></li>\n             <li><Link to=\"/contactus\">Contact </Link></li>\n           </ul>\n         </li>\n         <li><Link to=\"/\">Admin</Link></li>\n         <li><Link to=\"/contactus\">Contact</Link></li>\n       </div>\n     </ul>\n   </nav>\n        </div>\n        \n    )\n}\n\nexport default Navbar;","/Users/ziansari/Code/drs-frontend-app/src/pages/JobDetails.js",["116","117","118","119","120","121","122","123","124"],[],"import { usePagination, useTable, Column } from \"react-table\";\nimport { JobDetailsData } from \"../stubs/JobDetailsData\";\nimport { useState, useContext, useEffect } from \"react\";\nimport { AppContext } from '../App';\nimport '../css/newtable.css';\nimport { useQuery, gql } from '@apollo/client';\nimport { JOB_DETAILS_CSS_CRMDACT } from '../GraphQL/Queries'\nimport { parse } from 'graphql'\n\n\n\nfunction JobDetails() {\n\n  // const [myData, setMyData] = JobDetailsData.map((element) => element.data.jobDetails);\n  const { systemName, selectedJob, inquiryQ } = useContext(AppContext);\n\n  const [jobDetailsResponse, setJobDetailsResponse] = useState([]);\n  // const jobIdentifier = inquiryQ.split(' ')[0];\n\n\n  /*\n  const keys = Object.keys(myData[0]).join(',');\n  const res1 = Object.values(myData[0]).join(',');\n  */\n\n\n\n  const [tableRows, setTableRows] = useState([]);\n  const [values, setValues] = useState([]);\n\n\n  const changeHandler = (event) => {\n    const rowsArray = [];\n    const valuesArray = [];\n\n    jobDetailsResponse.map((d) => {\n      rowsArray.push(Object.keys(d));\n      valuesArray.push(Object.values(d));\n    });\n\n    setTableRows(rowsArray[0]);\n    setValues(valuesArray);\n  };\n\n\n\n  const { error, loading, data } = useQuery(gql`query{ ${inquiryQ}}`);\n\n  useEffect(() => {\n    if (data) {\n      setJobDetailsResponse(Object.values(data)[0]);\n\n    }\n\n\n  }, [data]);\n\n\n  // console.log(jobDetailsResponse);\n\n\n\n\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <div>\n      <h2> {selectedJob}</h2>\n      <div class=\"page-contain\">\n        <div class=\"card\">\n          <button onClick={changeHandler}>Refresh Data</button>\n\n          {/* {console.log(values)}\n      {console.log(tableRows)} */}\n\n\n\n          {/* Table */}\n\n          <div class=\"table-title\">  <h3> {selectedJob}</h3> </div>\n          <div class=\"button-container\">\n            <button class=\"primary\" title=\"Update Selected Rows\"> Update Selected Rows</button></div>\n          <div class=\"table-concept\">\n\n\n            <table >\n              <thead>\n                <tr>\n                  <th>Select</th>\n                  {tableRows.map((rows, index) => {\n                    return <th key={index}>{rows}</th>;\n                  })}\n                </tr>\n              </thead>\n              <tbody>\n                {values.map((value, index) => {\n                  return (\n                    <tr key={index}>\n                      <td><input type=\"checkbox\" /></td>\n                      {value.map((val, i) => {\n                        return <td key={i}>{val}</td>;\n                      })}\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n\n\n          </div>\n\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default JobDetails;","/Users/ziansari/Code/drs-frontend-app/src/components/PieChart.js",["125"],[],"import React from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport {Chart as ChartJS} from 'chart.js/auto';\n\nfunction PieChart({chartData}) {\n    return <Pie data={chartData} />\n}\n\nexport default PieChart;","/Users/ziansari/Code/drs-frontend-app/src/components/DoughnutChart.js",["126"],[],"import React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport {Chart as ChartJS} from 'chart.js/auto';\n\nfunction DoughnutChart({chartData}) {\n    return <Doughnut data={chartData} />\n}\n\nexport default DoughnutChart;","/Users/ziansari/Code/drs-frontend-app/src/components/LineChart.js",["127"],[],"import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport {Chart as ChartJS} from 'chart.js/auto';\n\nfunction LineChart({chartData}) {\n    return <Line data={chartData} />\n}\n\nexport default LineChart;","/Users/ziansari/Code/drs-frontend-app/src/components/BarChart.js",["128"],[],"import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport {Chart as ChartJS} from 'chart.js/auto';\n\nfunction BarChart({chartData}) {\n    return <Bar data={chartData} />\n}\n\nexport default BarChart;","/Users/ziansari/Code/drs-frontend-app/src/GraphQL/Queries.js",["129"],[],"import { gql } from '@apollo/client'\nimport { AppContext } from '../App';\nimport { useContext, useState } from 'react'\n\n\n\nfunction GetSystemName() {\n  const { systemName } = useContext(AppContext);\n  const [selectedSystem, setSelectedSystem] = useState(\"\");\n  setSelectedSystem(\"system: \" + systemName);\n  console.log(selectedSystem);\n}\n\n\nexport const LOAD_SYSTEMSUMMARY = gql`\nquery {\n    systemSummary {\n      systemName\n      completedJobs\n      pendingJobs\n    }\n  }`\n\n\nexport const LOAD_JOBSUMMARY = gql`\n  query($systemName: String! , $status: Int! ) {\n    jobSummaryBySystem( system: $systemName , pending: $status) {\n      id\n    jobName\n    jobStatus\n    pendingRecords\n    runDate\n    failureReason\n    retryCount\n  \tinquiryQ\n  \tgroupingQ\n  \tupdateQ\n    srcSystemId\n    srcSystem{\n      name\n    }\n    targetSystemId\n    targetSystem{\n      name\n    }\n    }\n  }`\n\nexport const JOB_DETAILS_CSS_CRMDACT = gql`\n  query{\n    CrmDeactivations {\n      requestId\n      sim\n      msisdn\n      created\n      status\n      statusReason\n      requestType\n    }\n  }`","/Users/ziansari/Code/drs-frontend-app/src/pages/ContactPage.js",[],[],"/Users/ziansari/Code/drs-frontend-app/src/stubs/DRS_job_status.js",[],[],"/Users/ziansari/Code/drs-frontend-app/src/stubs/CBCMJobStatus.js",[],[],"/Users/ziansari/Code/drs-frontend-app/src/stubs/JobDetailsData.js",[],[],{"ruleId":"130","severity":1,"message":"131","line":1,"column":8,"nodeType":"132","messageId":"133","endLine":1,"endColumn":12},{"ruleId":"130","severity":1,"message":"134","line":4,"column":50,"nodeType":"132","messageId":"133","endLine":4,"endColumn":54},{"ruleId":"135","severity":1,"message":"136","line":22,"column":53,"nodeType":"137","messageId":"138","endLine":22,"endColumn":55},{"ruleId":"130","severity":1,"message":"139","line":3,"column":8,"nodeType":"132","messageId":"133","endLine":3,"endColumn":16},{"ruleId":"130","severity":1,"message":"140","line":4,"column":8,"nodeType":"132","messageId":"133","endLine":4,"endColumn":17},{"ruleId":"130","severity":1,"message":"141","line":6,"column":8,"nodeType":"132","messageId":"133","endLine":6,"endColumn":21},{"ruleId":"130","severity":1,"message":"142","line":10,"column":20,"nodeType":"132","messageId":"133","endLine":10,"endColumn":23},{"ruleId":"130","severity":1,"message":"143","line":16,"column":18,"nodeType":"132","messageId":"133","endLine":16,"endColumn":27},{"ruleId":"130","severity":1,"message":"144","line":17,"column":25,"nodeType":"132","messageId":"133","endLine":17,"endColumn":42},{"ruleId":"130","severity":1,"message":"145","line":20,"column":10,"nodeType":"132","messageId":"133","endLine":20,"endColumn":23},{"ruleId":"130","severity":1,"message":"146","line":20,"column":25,"nodeType":"132","messageId":"133","endLine":20,"endColumn":41},{"ruleId":"130","severity":1,"message":"147","line":24,"column":11,"nodeType":"132","messageId":"133","endLine":24,"endColumn":16},{"ruleId":"130","severity":1,"message":"148","line":24,"column":18,"nodeType":"132","messageId":"133","endLine":24,"endColumn":25},{"ruleId":"149","severity":1,"message":"150","line":40,"column":6,"nodeType":"151","endLine":40,"endColumn":12,"suggestions":"152"},{"ruleId":"130","severity":1,"message":"153","line":43,"column":27,"nodeType":"132","messageId":"133","endLine":43,"endColumn":43},{"ruleId":"130","severity":1,"message":"143","line":12,"column":20,"nodeType":"132","messageId":"133","endLine":12,"endColumn":29},{"ruleId":"130","severity":1,"message":"154","line":13,"column":19,"nodeType":"132","messageId":"133","endLine":13,"endColumn":28},{"ruleId":"130","severity":1,"message":"147","line":19,"column":13,"nodeType":"132","messageId":"133","endLine":19,"endColumn":18},{"ruleId":"130","severity":1,"message":"148","line":19,"column":20,"nodeType":"132","messageId":"133","endLine":19,"endColumn":27},{"ruleId":"155","severity":1,"message":"156","line":25,"column":13,"nodeType":"157","messageId":"158","endLine":25,"endColumn":58},{"ruleId":"149","severity":1,"message":"159","line":38,"column":8,"nodeType":"151","endLine":38,"endColumn":14,"suggestions":"160"},{"ruleId":"161","severity":1,"message":"162","line":52,"column":25,"nodeType":"163","endLine":52,"endColumn":29},{"ruleId":"130","severity":1,"message":"164","line":1,"column":9,"nodeType":"132","messageId":"133","endLine":1,"endColumn":19},{"ruleId":"130","severity":1,"message":"131","line":4,"column":8,"nodeType":"132","messageId":"133","endLine":4,"endColumn":12},{"ruleId":"165","severity":1,"message":"166","line":17,"column":28,"nodeType":"163","endLine":17,"endColumn":46},{"ruleId":"130","severity":1,"message":"167","line":1,"column":10,"nodeType":"132","messageId":"133","endLine":1,"endColumn":23},{"ruleId":"130","severity":1,"message":"168","line":1,"column":25,"nodeType":"132","messageId":"133","endLine":1,"endColumn":33},{"ruleId":"130","severity":1,"message":"169","line":1,"column":35,"nodeType":"132","messageId":"133","endLine":1,"endColumn":41},{"ruleId":"130","severity":1,"message":"170","line":11,"column":18,"nodeType":"132","messageId":"133","endLine":11,"endColumn":27},{"ruleId":"130","severity":1,"message":"171","line":12,"column":11,"nodeType":"132","messageId":"133","endLine":12,"endColumn":21},{"ruleId":"130","severity":1,"message":"172","line":25,"column":9,"nodeType":"132","messageId":"133","endLine":25,"endColumn":22},{"ruleId":"135","severity":1,"message":"136","line":29,"column":20,"nodeType":"137","messageId":"138","endLine":29,"endColumn":22},{"ruleId":"135","severity":1,"message":"136","line":42,"column":20,"nodeType":"137","messageId":"138","endLine":42,"endColumn":22},{"ruleId":"149","severity":1,"message":"173","line":50,"column":4,"nodeType":"151","endLine":50,"endColumn":6,"suggestions":"174"},{"ruleId":"130","severity":1,"message":"175","line":3,"column":18,"nodeType":"132","messageId":"133","endLine":3,"endColumn":25},{"ruleId":"130","severity":1,"message":"175","line":3,"column":18,"nodeType":"132","messageId":"133","endLine":3,"endColumn":25},{"ruleId":"130","severity":1,"message":"175","line":3,"column":18,"nodeType":"132","messageId":"133","endLine":3,"endColumn":25},{"ruleId":"130","severity":1,"message":"175","line":3,"column":18,"nodeType":"132","messageId":"133","endLine":3,"endColumn":25},{"ruleId":"130","severity":1,"message":"176","line":7,"column":10,"nodeType":"132","messageId":"133","endLine":7,"endColumn":23},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'BarChart' is defined but never used.","'LineChart' is defined but never used.","'DoughnutChart' is defined but never used.","'gql' is defined but never used.","'setMydata' is assigned a value but never used.","'setSelectedSystem' is assigned a value but never used.","'newSystemName' is assigned a value but never used.","'setNewSystemName' is assigned a value but never used.","'error' is assigned a value but never used.","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'mydata'. Either include it or remove the dependency array.","ArrayExpression",["177"],"'setJobStatusData' is assigned a value but never used.","'setStatus' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has missing dependencies: 'JobsummaryError' and 'mydata'. Either include them or remove the dependency array.",["178"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'useContext' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'usePagination' is defined but never used.","'useTable' is defined but never used.","'Column' is defined but never used.","'setMyData' is assigned a value but never used.","'systemName' is assigned a value but never used.","'changeHandler' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'myData'. Either include it or remove the dependency array.",["179"],"'ChartJS' is defined but never used.","'GetSystemName' is defined but never used.",{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},"Update the dependencies array to be: [data, mydata]",{"range":"186","text":"187"},"Update the dependencies array to be: [JobsummaryError, data, mydata]",{"range":"188","text":"189"},"Update the dependencies array to be: [myData]",{"range":"190","text":"191"},[1163,1169],"[data, mydata]",[1247,1253],"[JobsummaryError, data, mydata]",[1154,1156],"[myData]"]